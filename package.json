{
	"name": "couchdb-vs",
	"displayName": "CouchDB Explorer",
	"version": "0.0.3",
	"publisher": "arbko",
	"repository": {
		"type": "git",
		"url": "https://github.com/arturbiko/couchdb-vs"
	},
	"icon": "./resources/market.png",
	"description": "Datamanagement for CouchDB.",
	"author": {
		"name": "Artur Biko"
	},
	"engines": {
		"vscode": "^1.74.0"
	},
	"categories": [
		"Other",
		"Data Science"
	],
	"keywords": [
		"couchdb",
		"database",
		"nosql"
	],
	"qna": "false",
	"main": "./dist/extension.js",
	"activationEvents": [],
	"contributes": {
		"configuration": {
			"title": "CouchDB Connection",
			"properties": {
				"couchdb-vs.protocol": {
					"type": "string",
					"description": "Used protocol. Usually either HTTPS or HTTP",
					"default": "https",
					"scope": "workspace",
					"order": 1
				},
				"couchdb-vs.host": {
					"type": "string",
					"description": "The URL of the host",
					"default": "",
					"scope": "workspace",
					"order": 2
				},
				"couchdb-vs.username": {
					"type": "string",
					"description": "The username to use",
					"default": "",
					"scope": "workspace",
					"order": 3
				},
				"couchdb-vs.password": {
					"type": "string",
					"description": "The password to use",
					"default": "",
					"scope": "workspace",
					"order": 4
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"icon": "./resources/icon.png",
					"id": "couchDataView",
					"title": "CouchDB Explorer"
				}
			]
		},
		"views": {
			"couchDataView": [
				{
					"id": "couchdb-vs.couchDataView",
					"name": "Databases"
				},
				{
					"id": "couchdb-vs.couchDocumentList",
					"name": "Documents"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "couchdb-vs.refreshDatabases",
					"when": "view == couchdb-vs.couchDataView",
					"group": "navigation"
				},
				{
					"command": "couchdb-vs.addDatabase",
					"when": "view == couchdb-vs.couchDataView",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "couchdb-vs.removeDatabase",
					"when": "view == couchdb-vs.couchDataView",
					"group": "inline"
				},
				{
					"command": "couchdb-vs.copyItemName",
					"group": "inline"
				}
			]
		},
		"commands": [
			{
				"command": "couchdb-vs.refreshDatabases",
				"title": "Refresh",
				"icon": "$(search-refresh)"
			},
			{
				"command": "couchdb-vs.addDatabase",
				"title": "Add Database",
				"icon": "$(add)"
			},
			{
				"command": "couchdb-vs.removeDatabase",
				"title": "Remove Database",
				"icon": "$(trash)"
			},
			{
				"command": "couchdb-vs.copyItemName",
				"title": "Copy to clipboard",
				"icon": "$(files)"
			},
			{
				"command": "couchdb-vs.selectDatabase",
				"title": "Select"
			},
			{
				"command": "couchdb-vs.openSettings",
				"title": "Settings"
			},
			{
				"command": "couchdb-vs.openDocument",
				"title": "Open Document"
			}
		],
		"viewsWelcome": [
			{
				"view": "couchdb-vs.couchDataView",
				"contents": "Please configure the connection settings and try refreshing the data. \n[Settings](command:couchdb-vs.openSettings)"
			},
			{
				"view": "couchdb-vs.couchDocumentList",
				"contents": "No databases selected to display anything. Well played. ðŸ˜Ž"
			}
		]
	},
	"dependencies": {
		"filenamify": "^6.0.0",
		"nano": "10.1.2"
	},
	"devDependencies": {
		"@types/chai": "^4.3.5",
		"@types/mocha": "^10.0.1",
		"@types/node": "^16.11.7",
		"@types/sinon": "^10.0.14",
		"@types/vscode": "^1.73.0",
		"@typescript-eslint/eslint-plugin": "^5.42.0",
		"@typescript-eslint/parser": "^5.42.0",
		"@vscode/test-electron": "^2.3.0",
		"@vscode/vsce": "^2.19.0",
		"chai": "^4.3.7",
		"clean-webpack-plugin": "^4.0.0",
		"copy-webpack-plugin": "^11.0.0",
		"eslint": "^8.26.0",
		"mocha": "^10.2.0",
		"sinon": "^15.0.4",
		"ts-loader": "^9.4.2",
		"ts-node": "^10.9.1",
		"tsconfig-paths": "^4.2.0",
		"tsconfig-paths-webpack-plugin": "^4.0.1",
		"typescript": "^5.0.2",
		"webpack": "^5.82.0",
		"webpack-cli": "^5.0.2",
		"webpack-dev-server": "^4.13.3"
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"lint": "eslint \"src/**/*.ts\"",
		"package": "webpack --mode production",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js",
		"build:binary": "npm ci && vsce package --pre-release"
	},
	"license": "MIT"
}
